"use strict";(self["webpackChunkportfolio"]=self["webpackChunkportfolio"]||[]).push([[559],{2559:function(e,i,t){t.r(i),t.d(i,{default:function(){return m}});var r=function(){var e=this,i=e._self._c;return i("div",[i("form",{on:{submit:function(i){return i.preventDefault(),e.startGame.apply(null,arguments)}}},[i("label",{attrs:{for:"pairs"}},[e._v("Nombre de paires :")]),i("input",{directives:[{name:"model",rawName:"v-model",value:e.pairs,expression:"pairs"}],attrs:{type:"number",id:"pairs",min:"1",value:"4"},domProps:{value:e.pairs},on:{input:function(i){i.target.composing||(e.pairs=i.target.value)}}}),i("br"),i("label",{attrs:{for:"unlimited"}},[e._v("Temps illimité :")]),i("input",{directives:[{name:"model",rawName:"v-model",value:e.unlimited,expression:"unlimited"}],attrs:{type:"checkbox",id:"unlimited"},domProps:{checked:Array.isArray(e.unlimited)?e._i(e.unlimited,null)>-1:e.unlimited},on:{change:function(i){var t=e.unlimited,r=i.target,s=!!r.checked;if(Array.isArray(t)){var a=null,l=e._i(t,a);r.checked?l<0&&(e.unlimited=t.concat([a])):l>-1&&(e.unlimited=t.slice(0,l).concat(t.slice(l+1)))}else e.unlimited=s}}}),i("br"),e.unlimited?e._e():i("div",[i("label",{attrs:{for:"timer"}},[e._v("Durée du timer (en secondes) :")]),i("input",{directives:[{name:"model",rawName:"v-model",value:e.time,expression:"time"}],attrs:{type:"number",id:"timer",min:"10",max:"600",value:"60"},domProps:{value:e.time},on:{input:function(i){i.target.composing||(e.time=i.target.value)}}}),i("br")]),i("input",{attrs:{type:"submit"},domProps:{value:e.cards.length>0?"Nouvelle partie":"Commencer le jeu"}})]),i("div",{attrs:{id:"memory-grid"}},e._l(e.cards,(function(t){return i("div",{key:t.id,staticClass:"card",class:{flipped:t.flipped},on:{click:function(i){return e.flipCard(t)}}},[i("div",{staticClass:"card-inner"},[i("div",{staticClass:"card-front"}),i("div",{staticClass:"card-back",style:{backgroundColor:t.color}},[e._v(" "+e._s(t.value)+" ")])])])})),0),e.timerDisplay?i("div",{attrs:{id:"timer"}},[e._v("Temps restant: "+e._s(e.timerDisplay))]):e._e(),e.gameOverMessage?i("div",{attrs:{id:"game-over-message"}},[e._v(e._s(e.gameOverMessage))]):e._e()])},s=[],a=(t(4114),{name:"memoryGame",data(){return{pairs:4,time:60,unlimited:!0,cards:[],flippedCards:[],score:0,timerId:null,timerDisplay:null,gameOverMessage:null}},methods:{startTimer(e){this.timerDisplay=e,this.timerId=setInterval((()=>{e--,this.timerDisplay=e,0===e&&(clearInterval(this.timerId),this.endGame())}),1e3)},createCards(){const e=[],i=[];for(let r=1;r<=this.pairs;r++)e.push(r.toString(),r.toString()),i.push(`hsl(${360*Math.random()}, 100%, 50%)`);const t=this.shuffle(e);this.cards=t.map(((e,t)=>({id:t,value:e,color:i[parseInt(e)-1],flipped:!1})))},shuffle(e){for(let i=e.length-1;i>0;i--){const t=Math.floor(Math.random()*(i+1));[e[i],e[t]]=[e[t],e[i]]}return e},flipCard(e){if(this.flippedCards.length<2&&!this.flippedCards.includes(e)&&!e.flipped&&(e.flipped=!0,this.flippedCards.push(e),2===this.flippedCards.length)){const[e,i]=this.flippedCards;e.value===i.value?(this.score+=10,this.flippedCards=[]):setTimeout((()=>{e.flipped=!1,i.flipped=!1,this.flippedCards=[]}),1e3)}},startGame(){this.createCards(),this.score=0,this.timerDisplay=null,this.gameOverMessage=null,this.unlimited||this.startTimer(this.time)},endGame(){this.gameOverMessage=`Jeu terminé ! Votre score est de ${this.score}.`,this.cards.forEach((e=>e.flipped=!1)),this.flippedCards=[]}}}),l=a,n=t(1656),d=(0,n.A)(l,r,s,!1,null,"89f3eda0",null),m=d.exports}}]);
//# sourceMappingURL=559.640f1444.js.map